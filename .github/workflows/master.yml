env:
  RUBY_VERSION: 2.7.x
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: TradCoTrackerDB

name: CI/CD
on: [push, pull_request]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
  rubocop-test:
    name: Rubocop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: Install Rubocop
        run: gem install rubocop
      - name: Check code
        run: rubocop
#   rspec-test:
#     name: RSpec
#     needs: rubocop-test
#     runs-on: ubuntu-latest
#     services:
#       postgres:
#         image: postgres:12
#         ports:
#           - 5432:5432
#         env:
#           POSTGRES_USER: ${{ env.POSTGRES_USER }}
#           POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
#     steps:
#       - uses: borales/actions-yarn@v2.3.0
#         with:
#           cmd: install
#       - uses: actions/checkout@v1
#       - uses: actions/setup-ruby@v1
#         with:
#           ruby-version: ${{ env.RUBY_VERSION }}
#       - name: Install postgres client
#       - run: sudo apt-get install libpq-dev
#       - name: Install dependencies
#         run: |
#           gem install bundler
#           bundler install
#           bundler exec rspec
#       - name: Create database
#         run: |
#           bundler exec rails db:create RAILS_ENV=test
#           bundler exec rails db:migrate RAILS_ENV=test
#       - name: Run tests
#         run: bundler exec rake
#       - name: Upload coverage results
#         uses: actions/upload-artifact@master
#         if: always()
#         with:
#           name: coverage-report
#           path: coverage
